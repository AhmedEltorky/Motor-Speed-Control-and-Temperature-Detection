
Microcontroller_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00000bba  00000c2e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bba  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000c4c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ca8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d20  00000000  00000000  00000d60  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000089f  00000000  00000000  00001a80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000602  00000000  00000000  0000231f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a8  00000000  00000000  00002924  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000477  00000000  00000000  00002acc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000636  00000000  00000000  00002f43  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00003579  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 4e 01 	jmp	0x29c	; 0x29c <__vector_1>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 08 01 	jmp	0x210	; 0x210 <__vector_21>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea eb       	ldi	r30, 0xBA	; 186
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 31       	cpi	r26, 0x1E	; 30
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <main>
  8e:	0c 94 db 05 	jmp	0xbb6	; 0xbb6 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <LCD_CmdWrite>:
    LCD_CmdWrite(0x80); // Move the CuRSor to FiRSt line FiRSt Position
}

void LCD_CmdWrite(char cmd)
{
    databus = (cmd & 0xF0);    // SENd the Higher Nibble of the command to LCD
  96:	98 2f       	mov	r25, r24
  98:	90 7f       	andi	r25, 0xF0	; 240
  9a:	9b b9       	out	0x0b, r25	; 11
    control_bus &= ~(1 << RS); // Select the Command Register by pulling RS LOW
  9c:	58 98       	cbi	0x0b, 0	; 11
    control_bus |= 1 << EN;    // SENd a High-to-Low Pusle at Enable Pin
  9e:	59 9a       	sbi	0x0b, 1	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a0:	00 00       	nop
    _delay_us(1);
    control_bus &= ~(1 << EN);
  a2:	59 98       	cbi	0x0b, 1	; 11
  a4:	23 e0       	ldi	r18, 0x03	; 3
  a6:	2a 95       	dec	r18
  a8:	f1 f7       	brne	.-4      	; 0xa6 <LCD_CmdWrite+0x10>
  aa:	00 00       	nop

    _delay_us(10); // wait for some time

    databus = ((cmd << 4) & 0xF0); // SENd the Lower Nibble of the command to LCD
  ac:	20 e1       	ldi	r18, 0x10	; 16
  ae:	82 9f       	mul	r24, r18
  b0:	c0 01       	movw	r24, r0
  b2:	11 24       	eor	r1, r1
  b4:	8b b9       	out	0x0b, r24	; 11
    control_bus &= ~(1 << RS);     // Select the Command Register by pulling RS LOW
  b6:	58 98       	cbi	0x0b, 0	; 11
    control_bus |= 1 << EN;        // SENd a High-to-Low Pusle at Enable Pin
  b8:	59 9a       	sbi	0x0b, 1	; 11
  ba:	00 00       	nop
    _delay_us(1);
    control_bus &= ~(1 << EN);
  bc:	59 98       	cbi	0x0b, 1	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	89 ef       	ldi	r24, 0xF9	; 249
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <LCD_CmdWrite+0x2c>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <LCD_CmdWrite+0x32>
  c8:	00 00       	nop
  ca:	08 95       	ret

000000cc <LCD_Init>:
  cc:	83 ed       	ldi	r24, 0xD3	; 211
  ce:	90 e3       	ldi	r25, 0x30	; 48
  d0:	01 97       	sbiw	r24, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <LCD_Init+0x4>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <LCD_Init+0xa>
  d6:	00 00       	nop
#include "lcdlib.h"

void LCD_Init()
{
    _delay_ms(50);
    databus_direction |= 0xF0; // Configure both databus and controlbus as output
  d8:	8a b1       	in	r24, 0x0a	; 10
  da:	80 6f       	ori	r24, 0xF0	; 240
  dc:	8a b9       	out	0x0a, r24	; 10
    control_direction |= (1 << RS);
  de:	50 9a       	sbi	0x0a, 0	; 10
    control_direction |= (1 << EN);
  e0:	51 9a       	sbi	0x0a, 1	; 10
    LCD_CmdWrite(0x02); //Initilize the LCD in 4bit Mode
  e2:	82 e0       	ldi	r24, 0x02	; 2
  e4:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_CmdWrite>
    LCD_CmdWrite(0x28);
  e8:	88 e2       	ldi	r24, 0x28	; 40
  ea:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_CmdWrite>
    LCD_CmdWrite(0x0E); // Display ON cuRSor ON
  ee:	8e e0       	ldi	r24, 0x0E	; 14
  f0:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_CmdWrite>
    LCD_CmdWrite(0x01); // Clear the LCD
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_CmdWrite>
    LCD_CmdWrite(0x80); // Move the CuRSor to FiRSt line FiRSt Position
  fa:	80 e8       	ldi	r24, 0x80	; 128
  fc:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_CmdWrite>
 100:	08 95       	ret

00000102 <LCD_DataWrite>:
    _delay_ms(1);
}

void LCD_DataWrite(char dat)
{
    databus = (dat & 0xF0);   // SENd the Higher Nibble of the Data to LCD
 102:	98 2f       	mov	r25, r24
 104:	90 7f       	andi	r25, 0xF0	; 240
 106:	9b b9       	out	0x0b, r25	; 11
    control_bus |= (1 << RS); // Select the Data Register by pulling RS HIGH
 108:	58 9a       	sbi	0x0b, 0	; 11
    control_bus |= (1 << EN); // SENd a High-to-Low Pusle at Enable Pin
 10a:	59 9a       	sbi	0x0b, 1	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10c:	00 00       	nop
    _delay_us(1);
    control_bus &= ~(1 << EN);
 10e:	59 98       	cbi	0x0b, 1	; 11
 110:	23 e0       	ldi	r18, 0x03	; 3
 112:	2a 95       	dec	r18
 114:	f1 f7       	brne	.-4      	; 0x112 <LCD_DataWrite+0x10>
 116:	00 00       	nop
    _delay_us(10);

    databus = ((dat << 4) & 0xF0); // SENd the Lower Nibble of the Data to LCD
 118:	20 e1       	ldi	r18, 0x10	; 16
 11a:	82 9f       	mul	r24, r18
 11c:	c0 01       	movw	r24, r0
 11e:	11 24       	eor	r1, r1
 120:	8b b9       	out	0x0b, r24	; 11
    control_bus |= (1 << RS);      // Select the Data Register by pulling RS HIGH
 122:	58 9a       	sbi	0x0b, 0	; 11
    control_bus |= (1 << EN);      // SENd a High-to-Low Pusle at Enable Pin
 124:	59 9a       	sbi	0x0b, 1	; 11
 126:	00 00       	nop
    _delay_us(1);
    control_bus &= ~(1 << EN);
 128:	59 98       	cbi	0x0b, 1	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12a:	89 ef       	ldi	r24, 0xF9	; 249
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <LCD_DataWrite+0x2c>
 132:	00 c0       	rjmp	.+0      	; 0x134 <LCD_DataWrite+0x32>
 134:	00 00       	nop
 136:	08 95       	ret

00000138 <lcd_write_string>:
    _delay_ms(1);
}

void lcd_write_string(char *str1)
{
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
 13c:	ec 01       	movw	r28, r24
    int i = 0;
    while (str1[i] != '\0')
 13e:	88 81       	ld	r24, Y
 140:	88 23       	and	r24, r24
 142:	31 f0       	breq	.+12     	; 0x150 <lcd_write_string+0x18>
 144:	21 96       	adiw	r28, 0x01	; 1
    {
        LCD_DataWrite(str1[i++]);
 146:	0e 94 81 00 	call	0x102	; 0x102 <LCD_DataWrite>
}

void lcd_write_string(char *str1)
{
    int i = 0;
    while (str1[i] != '\0')
 14a:	89 91       	ld	r24, Y+
 14c:	81 11       	cpse	r24, r1
 14e:	fb cf       	rjmp	.-10     	; 0x146 <lcd_write_string+0xe>
	for(i = 0; i < strlen(str1); i++)
	{
		LCD_DataWrite(str1[i]);
	}
	*/
}
 150:	df 91       	pop	r29
 152:	cf 91       	pop	r28
 154:	08 95       	ret

00000156 <lcd_write_int>:

void lcd_write_int(int val)
{
 156:	0f 93       	push	r16
 158:	1f 93       	push	r17
 15a:	cf 93       	push	r28
 15c:	df 93       	push	r29
 15e:	00 d0       	rcall	.+0      	; 0x160 <lcd_write_int+0xa>
 160:	00 d0       	rcall	.+0      	; 0x162 <lcd_write_int+0xc>
 162:	1f 92       	push	r1
 164:	cd b7       	in	r28, 0x3d	; 61
 166:	de b7       	in	r29, 0x3e	; 62
    char str[5];
    sprintf(str, "%d", val);
 168:	9f 93       	push	r25
 16a:	8f 93       	push	r24
 16c:	83 e0       	ldi	r24, 0x03	; 3
 16e:	91 e0       	ldi	r25, 0x01	; 1
 170:	9f 93       	push	r25
 172:	8f 93       	push	r24
 174:	8e 01       	movw	r16, r28
 176:	0f 5f       	subi	r16, 0xFF	; 255
 178:	1f 4f       	sbci	r17, 0xFF	; 255
 17a:	1f 93       	push	r17
 17c:	0f 93       	push	r16
 17e:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <sprintf>
    lcd_write_string(str);
 182:	c8 01       	movw	r24, r16
 184:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_write_string>
}
 188:	0f 90       	pop	r0
 18a:	0f 90       	pop	r0
 18c:	0f 90       	pop	r0
 18e:	0f 90       	pop	r0
 190:	0f 90       	pop	r0
 192:	0f 90       	pop	r0
 194:	0f 90       	pop	r0
 196:	0f 90       	pop	r0
 198:	0f 90       	pop	r0
 19a:	0f 90       	pop	r0
 19c:	0f 90       	pop	r0
 19e:	df 91       	pop	r29
 1a0:	cf 91       	pop	r28
 1a2:	1f 91       	pop	r17
 1a4:	0f 91       	pop	r16
 1a6:	08 95       	ret

000001a8 <main>:
#include <util/delay.h>
#include "lcd/lcdlib.h"

int main(void)
{
	EIMSK |= (1<<INT0);
 1a8:	e8 9a       	sbi	0x1d, 0	; 29
	EICRA |= (1<<ISC01);
 1aa:	e9 e6       	ldi	r30, 0x69	; 105
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	80 81       	ld	r24, Z
 1b0:	82 60       	ori	r24, 0x02	; 2
 1b2:	80 83       	st	Z, r24
	
	ADCSRA |= (1<<ADPS2);
 1b4:	ea e7       	ldi	r30, 0x7A	; 122
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	80 81       	ld	r24, Z
 1ba:	84 60       	ori	r24, 0x04	; 4
 1bc:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0);
 1be:	ac e7       	ldi	r26, 0x7C	; 124
 1c0:	b0 e0       	ldi	r27, 0x00	; 0
 1c2:	8c 91       	ld	r24, X
 1c4:	80 64       	ori	r24, 0x40	; 64
 1c6:	8c 93       	st	X, r24
	ADCSRA |= (1<<ADIE);
 1c8:	80 81       	ld	r24, Z
 1ca:	88 60       	ori	r24, 0x08	; 8
 1cc:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN);
 1ce:	80 81       	ld	r24, Z
 1d0:	80 68       	ori	r24, 0x80	; 128
 1d2:	80 83       	st	Z, r24

	DDRB |= (1 << DDB1)|(1 << DDB2);
 1d4:	84 b1       	in	r24, 0x04	; 4
 1d6:	86 60       	ori	r24, 0x06	; 6
 1d8:	84 b9       	out	0x04, r24	; 4
	ICR1 = 1023;
 1da:	8f ef       	ldi	r24, 0xFF	; 255
 1dc:	93 e0       	ldi	r25, 0x03	; 3
 1de:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 1e2:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	TCCR1A |= (1 << COM1A1)|(1 << COM1B1);
 1e6:	a0 e8       	ldi	r26, 0x80	; 128
 1e8:	b0 e0       	ldi	r27, 0x00	; 0
 1ea:	8c 91       	ld	r24, X
 1ec:	80 6a       	ori	r24, 0xA0	; 160
 1ee:	8c 93       	st	X, r24
	TCCR1A |= (1 << WGM11);
 1f0:	8c 91       	ld	r24, X
 1f2:	82 60       	ori	r24, 0x02	; 2
 1f4:	8c 93       	st	X, r24
	TCCR1B |= (1 << WGM12)|(1 << WGM13);
 1f6:	a1 e8       	ldi	r26, 0x81	; 129
 1f8:	b0 e0       	ldi	r27, 0x00	; 0
 1fa:	8c 91       	ld	r24, X
 1fc:	88 61       	ori	r24, 0x18	; 24
 1fe:	8c 93       	st	X, r24
	TCCR1B |= (1 << CS10);
 200:	8c 91       	ld	r24, X
 202:	81 60       	ori	r24, 0x01	; 1
 204:	8c 93       	st	X, r24

	ADCSRA |= (1<<ADSC);	
 206:	80 81       	ld	r24, Z
 208:	80 64       	ori	r24, 0x40	; 64
 20a:	80 83       	st	Z, r24
	sei();
 20c:	78 94       	sei
 20e:	ff cf       	rjmp	.-2      	; 0x20e <main+0x66>

00000210 <__vector_21>:
    while(1)
    {
    }
}

ISR(ADC_vect){
 210:	1f 92       	push	r1
 212:	0f 92       	push	r0
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	0f 92       	push	r0
 218:	11 24       	eor	r1, r1
 21a:	2f 93       	push	r18
 21c:	3f 93       	push	r19
 21e:	4f 93       	push	r20
 220:	5f 93       	push	r21
 222:	6f 93       	push	r22
 224:	7f 93       	push	r23
 226:	8f 93       	push	r24
 228:	9f 93       	push	r25
 22a:	af 93       	push	r26
 22c:	bf 93       	push	r27
 22e:	cf 93       	push	r28
 230:	df 93       	push	r29
 232:	ef 93       	push	r30
 234:	ff 93       	push	r31
	sei();
 236:	78 94       	sei
	LCD_Init();
 238:	0e 94 66 00 	call	0xcc	; 0xcc <LCD_Init>
	int adcValue = ADCW;
 23c:	e8 e7       	ldi	r30, 0x78	; 120
 23e:	f0 e0       	ldi	r31, 0x00	; 0
 240:	c0 81       	ld	r28, Z
 242:	d1 81       	ldd	r29, Z+1	; 0x01
	OCR1A = ADCW;
 244:	80 81       	ld	r24, Z
 246:	91 81       	ldd	r25, Z+1	; 0x01
 248:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 24c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	LCD_CmdWrite(_LCD_CLR);
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_CmdWrite>
	lcd_write_string(" speed=");
 256:	86 e0       	ldi	r24, 0x06	; 6
 258:	91 e0       	ldi	r25, 0x01	; 1
 25a:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_write_string>
	lcd_write_int(adcValue);
 25e:	ce 01       	movw	r24, r28
 260:	0e 94 ab 00 	call	0x156	; 0x156 <lcd_write_int>
	lcd_write_string(" R.P.M");
 264:	8e e0       	ldi	r24, 0x0E	; 14
 266:	91 e0       	ldi	r25, 0x01	; 1
 268:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_write_string>
	ADCSRA |= (1<<ADSC);
 26c:	ea e7       	ldi	r30, 0x7A	; 122
 26e:	f0 e0       	ldi	r31, 0x00	; 0
 270:	80 81       	ld	r24, Z
 272:	80 64       	ori	r24, 0x40	; 64
 274:	80 83       	st	Z, r24
}
 276:	ff 91       	pop	r31
 278:	ef 91       	pop	r30
 27a:	df 91       	pop	r29
 27c:	cf 91       	pop	r28
 27e:	bf 91       	pop	r27
 280:	af 91       	pop	r26
 282:	9f 91       	pop	r25
 284:	8f 91       	pop	r24
 286:	7f 91       	pop	r23
 288:	6f 91       	pop	r22
 28a:	5f 91       	pop	r21
 28c:	4f 91       	pop	r20
 28e:	3f 91       	pop	r19
 290:	2f 91       	pop	r18
 292:	0f 90       	pop	r0
 294:	0f be       	out	0x3f, r0	; 63
 296:	0f 90       	pop	r0
 298:	1f 90       	pop	r1
 29a:	18 95       	reti

0000029c <__vector_1>:

ISR(INT0_vect){
 29c:	1f 92       	push	r1
 29e:	0f 92       	push	r0
 2a0:	0f b6       	in	r0, 0x3f	; 63
 2a2:	0f 92       	push	r0
 2a4:	11 24       	eor	r1, r1
 2a6:	cf 92       	push	r12
 2a8:	df 92       	push	r13
 2aa:	ef 92       	push	r14
 2ac:	ff 92       	push	r15
 2ae:	2f 93       	push	r18
 2b0:	3f 93       	push	r19
 2b2:	4f 93       	push	r20
 2b4:	5f 93       	push	r21
 2b6:	6f 93       	push	r22
 2b8:	7f 93       	push	r23
 2ba:	8f 93       	push	r24
 2bc:	9f 93       	push	r25
 2be:	af 93       	push	r26
 2c0:	bf 93       	push	r27
 2c2:	ef 93       	push	r30
 2c4:	ff 93       	push	r31
	ADCSRA &= ~(1<<ADEN);
 2c6:	ea e7       	ldi	r30, 0x7A	; 122
 2c8:	f0 e0       	ldi	r31, 0x00	; 0
 2ca:	80 81       	ld	r24, Z
 2cc:	8f 77       	andi	r24, 0x7F	; 127
 2ce:	80 83       	st	Z, r24
	ADMUX |= (1<<MUX0);
 2d0:	ac e7       	ldi	r26, 0x7C	; 124
 2d2:	b0 e0       	ldi	r27, 0x00	; 0
 2d4:	8c 91       	ld	r24, X
 2d6:	81 60       	ori	r24, 0x01	; 1
 2d8:	8c 93       	st	X, r24
	ADCSRA |= (1<<ADEN);
 2da:	80 81       	ld	r24, Z
 2dc:	80 68       	ori	r24, 0x80	; 128
 2de:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
 2e0:	80 81       	ld	r24, Z
 2e2:	80 64       	ori	r24, 0x40	; 64
 2e4:	80 83       	st	Z, r24
	
	while (ADCSRA & (1<<ADSC));
 2e6:	80 81       	ld	r24, Z
 2e8:	86 fd       	sbrc	r24, 6
 2ea:	fd cf       	rjmp	.-6      	; 0x2e6 <__vector_1+0x4a>
	LCD_Init();
 2ec:	0e 94 66 00 	call	0xcc	; 0xcc <LCD_Init>
	int adcValue = ADCW;
 2f0:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2f4:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	adcValue *= 0.48828125;
 2f8:	07 2e       	mov	r0, r23
 2fa:	00 0c       	add	r0, r0
 2fc:	88 0b       	sbc	r24, r24
 2fe:	99 0b       	sbc	r25, r25
 300:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__floatsisf>
 304:	20 e0       	ldi	r18, 0x00	; 0
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	4a ef       	ldi	r20, 0xFA	; 250
 30a:	5e e3       	ldi	r21, 0x3E	; 62
 30c:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <__mulsf3>
 310:	6b 01       	movw	r12, r22
 312:	7c 01       	movw	r14, r24
	LCD_CmdWrite(_LCD_CLR);
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_CmdWrite>
	lcd_write_string(" temp = ");
 31a:	85 e1       	ldi	r24, 0x15	; 21
 31c:	91 e0       	ldi	r25, 0x01	; 1
 31e:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_write_string>
	lcd_write_int(adcValue);
 322:	c7 01       	movw	r24, r14
 324:	b6 01       	movw	r22, r12
 326:	0e 94 c0 01 	call	0x380	; 0x380 <__fixsfsi>
 32a:	cb 01       	movw	r24, r22
 32c:	0e 94 ab 00 	call	0x156	; 0x156 <lcd_write_int>
 330:	2f e3       	ldi	r18, 0x3F	; 63
 332:	8d e0       	ldi	r24, 0x0D	; 13
 334:	93 e0       	ldi	r25, 0x03	; 3
 336:	21 50       	subi	r18, 0x01	; 1
 338:	80 40       	sbci	r24, 0x00	; 0
 33a:	90 40       	sbci	r25, 0x00	; 0
 33c:	e1 f7       	brne	.-8      	; 0x336 <__vector_1+0x9a>
 33e:	00 c0       	rjmp	.+0      	; 0x340 <__vector_1+0xa4>
 340:	00 00       	nop
	_delay_ms(1000);
	
	ADMUX &= ~(1<<MUX0);
 342:	ec e7       	ldi	r30, 0x7C	; 124
 344:	f0 e0       	ldi	r31, 0x00	; 0
 346:	80 81       	ld	r24, Z
 348:	8e 7f       	andi	r24, 0xFE	; 254
 34a:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
 34c:	ea e7       	ldi	r30, 0x7A	; 122
 34e:	f0 e0       	ldi	r31, 0x00	; 0
 350:	80 81       	ld	r24, Z
 352:	80 64       	ori	r24, 0x40	; 64
 354:	80 83       	st	Z, r24
}
 356:	ff 91       	pop	r31
 358:	ef 91       	pop	r30
 35a:	bf 91       	pop	r27
 35c:	af 91       	pop	r26
 35e:	9f 91       	pop	r25
 360:	8f 91       	pop	r24
 362:	7f 91       	pop	r23
 364:	6f 91       	pop	r22
 366:	5f 91       	pop	r21
 368:	4f 91       	pop	r20
 36a:	3f 91       	pop	r19
 36c:	2f 91       	pop	r18
 36e:	ff 90       	pop	r15
 370:	ef 90       	pop	r14
 372:	df 90       	pop	r13
 374:	cf 90       	pop	r12
 376:	0f 90       	pop	r0
 378:	0f be       	out	0x3f, r0	; 63
 37a:	0f 90       	pop	r0
 37c:	1f 90       	pop	r1
 37e:	18 95       	reti

00000380 <__fixsfsi>:
 380:	0e 94 c7 01 	call	0x38e	; 0x38e <__fixunssfsi>
 384:	68 94       	set
 386:	b1 11       	cpse	r27, r1
 388:	0c 94 56 02 	jmp	0x4ac	; 0x4ac <__fp_szero>
 38c:	08 95       	ret

0000038e <__fixunssfsi>:
 38e:	0e 94 3b 02 	call	0x476	; 0x476 <__fp_splitA>
 392:	88 f0       	brcs	.+34     	; 0x3b6 <__fixunssfsi+0x28>
 394:	9f 57       	subi	r25, 0x7F	; 127
 396:	98 f0       	brcs	.+38     	; 0x3be <__fixunssfsi+0x30>
 398:	b9 2f       	mov	r27, r25
 39a:	99 27       	eor	r25, r25
 39c:	b7 51       	subi	r27, 0x17	; 23
 39e:	b0 f0       	brcs	.+44     	; 0x3cc <__fixunssfsi+0x3e>
 3a0:	e1 f0       	breq	.+56     	; 0x3da <__fixunssfsi+0x4c>
 3a2:	66 0f       	add	r22, r22
 3a4:	77 1f       	adc	r23, r23
 3a6:	88 1f       	adc	r24, r24
 3a8:	99 1f       	adc	r25, r25
 3aa:	1a f0       	brmi	.+6      	; 0x3b2 <__fixunssfsi+0x24>
 3ac:	ba 95       	dec	r27
 3ae:	c9 f7       	brne	.-14     	; 0x3a2 <__fixunssfsi+0x14>
 3b0:	14 c0       	rjmp	.+40     	; 0x3da <__fixunssfsi+0x4c>
 3b2:	b1 30       	cpi	r27, 0x01	; 1
 3b4:	91 f0       	breq	.+36     	; 0x3da <__fixunssfsi+0x4c>
 3b6:	0e 94 55 02 	call	0x4aa	; 0x4aa <__fp_zero>
 3ba:	b1 e0       	ldi	r27, 0x01	; 1
 3bc:	08 95       	ret
 3be:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__fp_zero>
 3c2:	67 2f       	mov	r22, r23
 3c4:	78 2f       	mov	r23, r24
 3c6:	88 27       	eor	r24, r24
 3c8:	b8 5f       	subi	r27, 0xF8	; 248
 3ca:	39 f0       	breq	.+14     	; 0x3da <__fixunssfsi+0x4c>
 3cc:	b9 3f       	cpi	r27, 0xF9	; 249
 3ce:	cc f3       	brlt	.-14     	; 0x3c2 <__fixunssfsi+0x34>
 3d0:	86 95       	lsr	r24
 3d2:	77 95       	ror	r23
 3d4:	67 95       	ror	r22
 3d6:	b3 95       	inc	r27
 3d8:	d9 f7       	brne	.-10     	; 0x3d0 <__fixunssfsi+0x42>
 3da:	3e f4       	brtc	.+14     	; 0x3ea <__fixunssfsi+0x5c>
 3dc:	90 95       	com	r25
 3de:	80 95       	com	r24
 3e0:	70 95       	com	r23
 3e2:	61 95       	neg	r22
 3e4:	7f 4f       	sbci	r23, 0xFF	; 255
 3e6:	8f 4f       	sbci	r24, 0xFF	; 255
 3e8:	9f 4f       	sbci	r25, 0xFF	; 255
 3ea:	08 95       	ret

000003ec <__floatunsisf>:
 3ec:	e8 94       	clt
 3ee:	09 c0       	rjmp	.+18     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>

000003f0 <__floatsisf>:
 3f0:	97 fb       	bst	r25, 7
 3f2:	3e f4       	brtc	.+14     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f4:	90 95       	com	r25
 3f6:	80 95       	com	r24
 3f8:	70 95       	com	r23
 3fa:	61 95       	neg	r22
 3fc:	7f 4f       	sbci	r23, 0xFF	; 255
 3fe:	8f 4f       	sbci	r24, 0xFF	; 255
 400:	9f 4f       	sbci	r25, 0xFF	; 255
 402:	99 23       	and	r25, r25
 404:	a9 f0       	breq	.+42     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 406:	f9 2f       	mov	r31, r25
 408:	96 e9       	ldi	r25, 0x96	; 150
 40a:	bb 27       	eor	r27, r27
 40c:	93 95       	inc	r25
 40e:	f6 95       	lsr	r31
 410:	87 95       	ror	r24
 412:	77 95       	ror	r23
 414:	67 95       	ror	r22
 416:	b7 95       	ror	r27
 418:	f1 11       	cpse	r31, r1
 41a:	f8 cf       	rjmp	.-16     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 41c:	fa f4       	brpl	.+62     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 41e:	bb 0f       	add	r27, r27
 420:	11 f4       	brne	.+4      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 422:	60 ff       	sbrs	r22, 0
 424:	1b c0       	rjmp	.+54     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 426:	6f 5f       	subi	r22, 0xFF	; 255
 428:	7f 4f       	sbci	r23, 0xFF	; 255
 42a:	8f 4f       	sbci	r24, 0xFF	; 255
 42c:	9f 4f       	sbci	r25, 0xFF	; 255
 42e:	16 c0       	rjmp	.+44     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 430:	88 23       	and	r24, r24
 432:	11 f0       	breq	.+4      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 434:	96 e9       	ldi	r25, 0x96	; 150
 436:	11 c0       	rjmp	.+34     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 438:	77 23       	and	r23, r23
 43a:	21 f0       	breq	.+8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 43c:	9e e8       	ldi	r25, 0x8E	; 142
 43e:	87 2f       	mov	r24, r23
 440:	76 2f       	mov	r23, r22
 442:	05 c0       	rjmp	.+10     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 444:	66 23       	and	r22, r22
 446:	71 f0       	breq	.+28     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 448:	96 e8       	ldi	r25, 0x86	; 134
 44a:	86 2f       	mov	r24, r22
 44c:	70 e0       	ldi	r23, 0x00	; 0
 44e:	60 e0       	ldi	r22, 0x00	; 0
 450:	2a f0       	brmi	.+10     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 452:	9a 95       	dec	r25
 454:	66 0f       	add	r22, r22
 456:	77 1f       	adc	r23, r23
 458:	88 1f       	adc	r24, r24
 45a:	da f7       	brpl	.-10     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 45c:	88 0f       	add	r24, r24
 45e:	96 95       	lsr	r25
 460:	87 95       	ror	r24
 462:	97 f9       	bld	r25, 7
 464:	08 95       	ret

00000466 <__fp_split3>:
 466:	57 fd       	sbrc	r21, 7
 468:	90 58       	subi	r25, 0x80	; 128
 46a:	44 0f       	add	r20, r20
 46c:	55 1f       	adc	r21, r21
 46e:	59 f0       	breq	.+22     	; 0x486 <__fp_splitA+0x10>
 470:	5f 3f       	cpi	r21, 0xFF	; 255
 472:	71 f0       	breq	.+28     	; 0x490 <__fp_splitA+0x1a>
 474:	47 95       	ror	r20

00000476 <__fp_splitA>:
 476:	88 0f       	add	r24, r24
 478:	97 fb       	bst	r25, 7
 47a:	99 1f       	adc	r25, r25
 47c:	61 f0       	breq	.+24     	; 0x496 <__fp_splitA+0x20>
 47e:	9f 3f       	cpi	r25, 0xFF	; 255
 480:	79 f0       	breq	.+30     	; 0x4a0 <__fp_splitA+0x2a>
 482:	87 95       	ror	r24
 484:	08 95       	ret
 486:	12 16       	cp	r1, r18
 488:	13 06       	cpc	r1, r19
 48a:	14 06       	cpc	r1, r20
 48c:	55 1f       	adc	r21, r21
 48e:	f2 cf       	rjmp	.-28     	; 0x474 <__fp_split3+0xe>
 490:	46 95       	lsr	r20
 492:	f1 df       	rcall	.-30     	; 0x476 <__fp_splitA>
 494:	08 c0       	rjmp	.+16     	; 0x4a6 <__fp_splitA+0x30>
 496:	16 16       	cp	r1, r22
 498:	17 06       	cpc	r1, r23
 49a:	18 06       	cpc	r1, r24
 49c:	99 1f       	adc	r25, r25
 49e:	f1 cf       	rjmp	.-30     	; 0x482 <__fp_splitA+0xc>
 4a0:	86 95       	lsr	r24
 4a2:	71 05       	cpc	r23, r1
 4a4:	61 05       	cpc	r22, r1
 4a6:	08 94       	sec
 4a8:	08 95       	ret

000004aa <__fp_zero>:
 4aa:	e8 94       	clt

000004ac <__fp_szero>:
 4ac:	bb 27       	eor	r27, r27
 4ae:	66 27       	eor	r22, r22
 4b0:	77 27       	eor	r23, r23
 4b2:	cb 01       	movw	r24, r22
 4b4:	97 f9       	bld	r25, 7
 4b6:	08 95       	ret

000004b8 <__mulsf3>:
 4b8:	0e 94 6f 02 	call	0x4de	; 0x4de <__mulsf3x>
 4bc:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_round>
 4c0:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__fp_pscA>
 4c4:	38 f0       	brcs	.+14     	; 0x4d4 <__mulsf3+0x1c>
 4c6:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__fp_pscB>
 4ca:	20 f0       	brcs	.+8      	; 0x4d4 <__mulsf3+0x1c>
 4cc:	95 23       	and	r25, r21
 4ce:	11 f0       	breq	.+4      	; 0x4d4 <__mulsf3+0x1c>
 4d0:	0c 94 c9 02 	jmp	0x592	; 0x592 <__fp_inf>
 4d4:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_nan>
 4d8:	11 24       	eor	r1, r1
 4da:	0c 94 56 02 	jmp	0x4ac	; 0x4ac <__fp_szero>

000004de <__mulsf3x>:
 4de:	0e 94 33 02 	call	0x466	; 0x466 <__fp_split3>
 4e2:	70 f3       	brcs	.-36     	; 0x4c0 <__mulsf3+0x8>

000004e4 <__mulsf3_pse>:
 4e4:	95 9f       	mul	r25, r21
 4e6:	c1 f3       	breq	.-16     	; 0x4d8 <__mulsf3+0x20>
 4e8:	95 0f       	add	r25, r21
 4ea:	50 e0       	ldi	r21, 0x00	; 0
 4ec:	55 1f       	adc	r21, r21
 4ee:	62 9f       	mul	r22, r18
 4f0:	f0 01       	movw	r30, r0
 4f2:	72 9f       	mul	r23, r18
 4f4:	bb 27       	eor	r27, r27
 4f6:	f0 0d       	add	r31, r0
 4f8:	b1 1d       	adc	r27, r1
 4fa:	63 9f       	mul	r22, r19
 4fc:	aa 27       	eor	r26, r26
 4fe:	f0 0d       	add	r31, r0
 500:	b1 1d       	adc	r27, r1
 502:	aa 1f       	adc	r26, r26
 504:	64 9f       	mul	r22, r20
 506:	66 27       	eor	r22, r22
 508:	b0 0d       	add	r27, r0
 50a:	a1 1d       	adc	r26, r1
 50c:	66 1f       	adc	r22, r22
 50e:	82 9f       	mul	r24, r18
 510:	22 27       	eor	r18, r18
 512:	b0 0d       	add	r27, r0
 514:	a1 1d       	adc	r26, r1
 516:	62 1f       	adc	r22, r18
 518:	73 9f       	mul	r23, r19
 51a:	b0 0d       	add	r27, r0
 51c:	a1 1d       	adc	r26, r1
 51e:	62 1f       	adc	r22, r18
 520:	83 9f       	mul	r24, r19
 522:	a0 0d       	add	r26, r0
 524:	61 1d       	adc	r22, r1
 526:	22 1f       	adc	r18, r18
 528:	74 9f       	mul	r23, r20
 52a:	33 27       	eor	r19, r19
 52c:	a0 0d       	add	r26, r0
 52e:	61 1d       	adc	r22, r1
 530:	23 1f       	adc	r18, r19
 532:	84 9f       	mul	r24, r20
 534:	60 0d       	add	r22, r0
 536:	21 1d       	adc	r18, r1
 538:	82 2f       	mov	r24, r18
 53a:	76 2f       	mov	r23, r22
 53c:	6a 2f       	mov	r22, r26
 53e:	11 24       	eor	r1, r1
 540:	9f 57       	subi	r25, 0x7F	; 127
 542:	50 40       	sbci	r21, 0x00	; 0
 544:	9a f0       	brmi	.+38     	; 0x56c <__mulsf3_pse+0x88>
 546:	f1 f0       	breq	.+60     	; 0x584 <__mulsf3_pse+0xa0>
 548:	88 23       	and	r24, r24
 54a:	4a f0       	brmi	.+18     	; 0x55e <__mulsf3_pse+0x7a>
 54c:	ee 0f       	add	r30, r30
 54e:	ff 1f       	adc	r31, r31
 550:	bb 1f       	adc	r27, r27
 552:	66 1f       	adc	r22, r22
 554:	77 1f       	adc	r23, r23
 556:	88 1f       	adc	r24, r24
 558:	91 50       	subi	r25, 0x01	; 1
 55a:	50 40       	sbci	r21, 0x00	; 0
 55c:	a9 f7       	brne	.-22     	; 0x548 <__mulsf3_pse+0x64>
 55e:	9e 3f       	cpi	r25, 0xFE	; 254
 560:	51 05       	cpc	r21, r1
 562:	80 f0       	brcs	.+32     	; 0x584 <__mulsf3_pse+0xa0>
 564:	0c 94 c9 02 	jmp	0x592	; 0x592 <__fp_inf>
 568:	0c 94 56 02 	jmp	0x4ac	; 0x4ac <__fp_szero>
 56c:	5f 3f       	cpi	r21, 0xFF	; 255
 56e:	e4 f3       	brlt	.-8      	; 0x568 <__mulsf3_pse+0x84>
 570:	98 3e       	cpi	r25, 0xE8	; 232
 572:	d4 f3       	brlt	.-12     	; 0x568 <__mulsf3_pse+0x84>
 574:	86 95       	lsr	r24
 576:	77 95       	ror	r23
 578:	67 95       	ror	r22
 57a:	b7 95       	ror	r27
 57c:	f7 95       	ror	r31
 57e:	e7 95       	ror	r30
 580:	9f 5f       	subi	r25, 0xFF	; 255
 582:	c1 f7       	brne	.-16     	; 0x574 <__mulsf3_pse+0x90>
 584:	fe 2b       	or	r31, r30
 586:	88 0f       	add	r24, r24
 588:	91 1d       	adc	r25, r1
 58a:	96 95       	lsr	r25
 58c:	87 95       	ror	r24
 58e:	97 f9       	bld	r25, 7
 590:	08 95       	ret

00000592 <__fp_inf>:
 592:	97 f9       	bld	r25, 7
 594:	9f 67       	ori	r25, 0x7F	; 127
 596:	80 e8       	ldi	r24, 0x80	; 128
 598:	70 e0       	ldi	r23, 0x00	; 0
 59a:	60 e0       	ldi	r22, 0x00	; 0
 59c:	08 95       	ret

0000059e <__fp_nan>:
 59e:	9f ef       	ldi	r25, 0xFF	; 255
 5a0:	80 ec       	ldi	r24, 0xC0	; 192
 5a2:	08 95       	ret

000005a4 <__fp_pscA>:
 5a4:	00 24       	eor	r0, r0
 5a6:	0a 94       	dec	r0
 5a8:	16 16       	cp	r1, r22
 5aa:	17 06       	cpc	r1, r23
 5ac:	18 06       	cpc	r1, r24
 5ae:	09 06       	cpc	r0, r25
 5b0:	08 95       	ret

000005b2 <__fp_pscB>:
 5b2:	00 24       	eor	r0, r0
 5b4:	0a 94       	dec	r0
 5b6:	12 16       	cp	r1, r18
 5b8:	13 06       	cpc	r1, r19
 5ba:	14 06       	cpc	r1, r20
 5bc:	05 06       	cpc	r0, r21
 5be:	08 95       	ret

000005c0 <__fp_round>:
 5c0:	09 2e       	mov	r0, r25
 5c2:	03 94       	inc	r0
 5c4:	00 0c       	add	r0, r0
 5c6:	11 f4       	brne	.+4      	; 0x5cc <__fp_round+0xc>
 5c8:	88 23       	and	r24, r24
 5ca:	52 f0       	brmi	.+20     	; 0x5e0 <__fp_round+0x20>
 5cc:	bb 0f       	add	r27, r27
 5ce:	40 f4       	brcc	.+16     	; 0x5e0 <__fp_round+0x20>
 5d0:	bf 2b       	or	r27, r31
 5d2:	11 f4       	brne	.+4      	; 0x5d8 <__fp_round+0x18>
 5d4:	60 ff       	sbrs	r22, 0
 5d6:	04 c0       	rjmp	.+8      	; 0x5e0 <__fp_round+0x20>
 5d8:	6f 5f       	subi	r22, 0xFF	; 255
 5da:	7f 4f       	sbci	r23, 0xFF	; 255
 5dc:	8f 4f       	sbci	r24, 0xFF	; 255
 5de:	9f 4f       	sbci	r25, 0xFF	; 255
 5e0:	08 95       	ret

000005e2 <sprintf>:
 5e2:	ae e0       	ldi	r26, 0x0E	; 14
 5e4:	b0 e0       	ldi	r27, 0x00	; 0
 5e6:	e7 ef       	ldi	r30, 0xF7	; 247
 5e8:	f2 e0       	ldi	r31, 0x02	; 2
 5ea:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__prologue_saves__+0x1c>
 5ee:	0d 89       	ldd	r16, Y+21	; 0x15
 5f0:	1e 89       	ldd	r17, Y+22	; 0x16
 5f2:	86 e0       	ldi	r24, 0x06	; 6
 5f4:	8c 83       	std	Y+4, r24	; 0x04
 5f6:	1a 83       	std	Y+2, r17	; 0x02
 5f8:	09 83       	std	Y+1, r16	; 0x01
 5fa:	8f ef       	ldi	r24, 0xFF	; 255
 5fc:	9f e7       	ldi	r25, 0x7F	; 127
 5fe:	9e 83       	std	Y+6, r25	; 0x06
 600:	8d 83       	std	Y+5, r24	; 0x05
 602:	ae 01       	movw	r20, r28
 604:	47 5e       	subi	r20, 0xE7	; 231
 606:	5f 4f       	sbci	r21, 0xFF	; 255
 608:	6f 89       	ldd	r22, Y+23	; 0x17
 60a:	78 8d       	ldd	r23, Y+24	; 0x18
 60c:	ce 01       	movw	r24, r28
 60e:	01 96       	adiw	r24, 0x01	; 1
 610:	0e 94 13 03 	call	0x626	; 0x626 <vfprintf>
 614:	ef 81       	ldd	r30, Y+7	; 0x07
 616:	f8 85       	ldd	r31, Y+8	; 0x08
 618:	e0 0f       	add	r30, r16
 61a:	f1 1f       	adc	r31, r17
 61c:	10 82       	st	Z, r1
 61e:	2e 96       	adiw	r28, 0x0e	; 14
 620:	e4 e0       	ldi	r30, 0x04	; 4
 622:	0c 94 ce 05 	jmp	0xb9c	; 0xb9c <__epilogue_restores__+0x1c>

00000626 <vfprintf>:
 626:	ab e0       	ldi	r26, 0x0B	; 11
 628:	b0 e0       	ldi	r27, 0x00	; 0
 62a:	e9 e1       	ldi	r30, 0x19	; 25
 62c:	f3 e0       	ldi	r31, 0x03	; 3
 62e:	0c 94 a4 05 	jmp	0xb48	; 0xb48 <__prologue_saves__>
 632:	6c 01       	movw	r12, r24
 634:	7b 01       	movw	r14, r22
 636:	8a 01       	movw	r16, r20
 638:	fc 01       	movw	r30, r24
 63a:	17 82       	std	Z+7, r1	; 0x07
 63c:	16 82       	std	Z+6, r1	; 0x06
 63e:	83 81       	ldd	r24, Z+3	; 0x03
 640:	81 ff       	sbrs	r24, 1
 642:	cc c1       	rjmp	.+920    	; 0x9dc <__stack+0xdd>
 644:	ce 01       	movw	r24, r28
 646:	01 96       	adiw	r24, 0x01	; 1
 648:	3c 01       	movw	r6, r24
 64a:	f6 01       	movw	r30, r12
 64c:	93 81       	ldd	r25, Z+3	; 0x03
 64e:	f7 01       	movw	r30, r14
 650:	93 fd       	sbrc	r25, 3
 652:	85 91       	lpm	r24, Z+
 654:	93 ff       	sbrs	r25, 3
 656:	81 91       	ld	r24, Z+
 658:	7f 01       	movw	r14, r30
 65a:	88 23       	and	r24, r24
 65c:	09 f4       	brne	.+2      	; 0x660 <vfprintf+0x3a>
 65e:	ba c1       	rjmp	.+884    	; 0x9d4 <__stack+0xd5>
 660:	85 32       	cpi	r24, 0x25	; 37
 662:	39 f4       	brne	.+14     	; 0x672 <vfprintf+0x4c>
 664:	93 fd       	sbrc	r25, 3
 666:	85 91       	lpm	r24, Z+
 668:	93 ff       	sbrs	r25, 3
 66a:	81 91       	ld	r24, Z+
 66c:	7f 01       	movw	r14, r30
 66e:	85 32       	cpi	r24, 0x25	; 37
 670:	29 f4       	brne	.+10     	; 0x67c <vfprintf+0x56>
 672:	b6 01       	movw	r22, r12
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	0e 94 0a 05 	call	0xa14	; 0xa14 <fputc>
 67a:	e7 cf       	rjmp	.-50     	; 0x64a <vfprintf+0x24>
 67c:	91 2c       	mov	r9, r1
 67e:	21 2c       	mov	r2, r1
 680:	31 2c       	mov	r3, r1
 682:	ff e1       	ldi	r31, 0x1F	; 31
 684:	f3 15       	cp	r31, r3
 686:	d8 f0       	brcs	.+54     	; 0x6be <vfprintf+0x98>
 688:	8b 32       	cpi	r24, 0x2B	; 43
 68a:	79 f0       	breq	.+30     	; 0x6aa <vfprintf+0x84>
 68c:	38 f4       	brcc	.+14     	; 0x69c <vfprintf+0x76>
 68e:	80 32       	cpi	r24, 0x20	; 32
 690:	79 f0       	breq	.+30     	; 0x6b0 <vfprintf+0x8a>
 692:	83 32       	cpi	r24, 0x23	; 35
 694:	a1 f4       	brne	.+40     	; 0x6be <vfprintf+0x98>
 696:	23 2d       	mov	r18, r3
 698:	20 61       	ori	r18, 0x10	; 16
 69a:	1d c0       	rjmp	.+58     	; 0x6d6 <vfprintf+0xb0>
 69c:	8d 32       	cpi	r24, 0x2D	; 45
 69e:	61 f0       	breq	.+24     	; 0x6b8 <vfprintf+0x92>
 6a0:	80 33       	cpi	r24, 0x30	; 48
 6a2:	69 f4       	brne	.+26     	; 0x6be <vfprintf+0x98>
 6a4:	23 2d       	mov	r18, r3
 6a6:	21 60       	ori	r18, 0x01	; 1
 6a8:	16 c0       	rjmp	.+44     	; 0x6d6 <vfprintf+0xb0>
 6aa:	83 2d       	mov	r24, r3
 6ac:	82 60       	ori	r24, 0x02	; 2
 6ae:	38 2e       	mov	r3, r24
 6b0:	e3 2d       	mov	r30, r3
 6b2:	e4 60       	ori	r30, 0x04	; 4
 6b4:	3e 2e       	mov	r3, r30
 6b6:	2a c0       	rjmp	.+84     	; 0x70c <vfprintf+0xe6>
 6b8:	f3 2d       	mov	r31, r3
 6ba:	f8 60       	ori	r31, 0x08	; 8
 6bc:	1d c0       	rjmp	.+58     	; 0x6f8 <vfprintf+0xd2>
 6be:	37 fc       	sbrc	r3, 7
 6c0:	2d c0       	rjmp	.+90     	; 0x71c <vfprintf+0xf6>
 6c2:	20 ed       	ldi	r18, 0xD0	; 208
 6c4:	28 0f       	add	r18, r24
 6c6:	2a 30       	cpi	r18, 0x0A	; 10
 6c8:	40 f0       	brcs	.+16     	; 0x6da <vfprintf+0xb4>
 6ca:	8e 32       	cpi	r24, 0x2E	; 46
 6cc:	b9 f4       	brne	.+46     	; 0x6fc <vfprintf+0xd6>
 6ce:	36 fc       	sbrc	r3, 6
 6d0:	81 c1       	rjmp	.+770    	; 0x9d4 <__stack+0xd5>
 6d2:	23 2d       	mov	r18, r3
 6d4:	20 64       	ori	r18, 0x40	; 64
 6d6:	32 2e       	mov	r3, r18
 6d8:	19 c0       	rjmp	.+50     	; 0x70c <vfprintf+0xe6>
 6da:	36 fe       	sbrs	r3, 6
 6dc:	06 c0       	rjmp	.+12     	; 0x6ea <vfprintf+0xc4>
 6de:	8a e0       	ldi	r24, 0x0A	; 10
 6e0:	98 9e       	mul	r9, r24
 6e2:	20 0d       	add	r18, r0
 6e4:	11 24       	eor	r1, r1
 6e6:	92 2e       	mov	r9, r18
 6e8:	11 c0       	rjmp	.+34     	; 0x70c <vfprintf+0xe6>
 6ea:	ea e0       	ldi	r30, 0x0A	; 10
 6ec:	2e 9e       	mul	r2, r30
 6ee:	20 0d       	add	r18, r0
 6f0:	11 24       	eor	r1, r1
 6f2:	22 2e       	mov	r2, r18
 6f4:	f3 2d       	mov	r31, r3
 6f6:	f0 62       	ori	r31, 0x20	; 32
 6f8:	3f 2e       	mov	r3, r31
 6fa:	08 c0       	rjmp	.+16     	; 0x70c <vfprintf+0xe6>
 6fc:	8c 36       	cpi	r24, 0x6C	; 108
 6fe:	21 f4       	brne	.+8      	; 0x708 <vfprintf+0xe2>
 700:	83 2d       	mov	r24, r3
 702:	80 68       	ori	r24, 0x80	; 128
 704:	38 2e       	mov	r3, r24
 706:	02 c0       	rjmp	.+4      	; 0x70c <vfprintf+0xe6>
 708:	88 36       	cpi	r24, 0x68	; 104
 70a:	41 f4       	brne	.+16     	; 0x71c <vfprintf+0xf6>
 70c:	f7 01       	movw	r30, r14
 70e:	93 fd       	sbrc	r25, 3
 710:	85 91       	lpm	r24, Z+
 712:	93 ff       	sbrs	r25, 3
 714:	81 91       	ld	r24, Z+
 716:	7f 01       	movw	r14, r30
 718:	81 11       	cpse	r24, r1
 71a:	b3 cf       	rjmp	.-154    	; 0x682 <vfprintf+0x5c>
 71c:	98 2f       	mov	r25, r24
 71e:	9f 7d       	andi	r25, 0xDF	; 223
 720:	95 54       	subi	r25, 0x45	; 69
 722:	93 30       	cpi	r25, 0x03	; 3
 724:	28 f4       	brcc	.+10     	; 0x730 <vfprintf+0x10a>
 726:	0c 5f       	subi	r16, 0xFC	; 252
 728:	1f 4f       	sbci	r17, 0xFF	; 255
 72a:	9f e3       	ldi	r25, 0x3F	; 63
 72c:	99 83       	std	Y+1, r25	; 0x01
 72e:	0d c0       	rjmp	.+26     	; 0x74a <vfprintf+0x124>
 730:	83 36       	cpi	r24, 0x63	; 99
 732:	31 f0       	breq	.+12     	; 0x740 <vfprintf+0x11a>
 734:	83 37       	cpi	r24, 0x73	; 115
 736:	71 f0       	breq	.+28     	; 0x754 <vfprintf+0x12e>
 738:	83 35       	cpi	r24, 0x53	; 83
 73a:	09 f0       	breq	.+2      	; 0x73e <vfprintf+0x118>
 73c:	59 c0       	rjmp	.+178    	; 0x7f0 <vfprintf+0x1ca>
 73e:	21 c0       	rjmp	.+66     	; 0x782 <vfprintf+0x15c>
 740:	f8 01       	movw	r30, r16
 742:	80 81       	ld	r24, Z
 744:	89 83       	std	Y+1, r24	; 0x01
 746:	0e 5f       	subi	r16, 0xFE	; 254
 748:	1f 4f       	sbci	r17, 0xFF	; 255
 74a:	88 24       	eor	r8, r8
 74c:	83 94       	inc	r8
 74e:	91 2c       	mov	r9, r1
 750:	53 01       	movw	r10, r6
 752:	13 c0       	rjmp	.+38     	; 0x77a <vfprintf+0x154>
 754:	28 01       	movw	r4, r16
 756:	f2 e0       	ldi	r31, 0x02	; 2
 758:	4f 0e       	add	r4, r31
 75a:	51 1c       	adc	r5, r1
 75c:	f8 01       	movw	r30, r16
 75e:	a0 80       	ld	r10, Z
 760:	b1 80       	ldd	r11, Z+1	; 0x01
 762:	36 fe       	sbrs	r3, 6
 764:	03 c0       	rjmp	.+6      	; 0x76c <vfprintf+0x146>
 766:	69 2d       	mov	r22, r9
 768:	70 e0       	ldi	r23, 0x00	; 0
 76a:	02 c0       	rjmp	.+4      	; 0x770 <vfprintf+0x14a>
 76c:	6f ef       	ldi	r22, 0xFF	; 255
 76e:	7f ef       	ldi	r23, 0xFF	; 255
 770:	c5 01       	movw	r24, r10
 772:	0e 94 ff 04 	call	0x9fe	; 0x9fe <strnlen>
 776:	4c 01       	movw	r8, r24
 778:	82 01       	movw	r16, r4
 77a:	f3 2d       	mov	r31, r3
 77c:	ff 77       	andi	r31, 0x7F	; 127
 77e:	3f 2e       	mov	r3, r31
 780:	16 c0       	rjmp	.+44     	; 0x7ae <vfprintf+0x188>
 782:	28 01       	movw	r4, r16
 784:	22 e0       	ldi	r18, 0x02	; 2
 786:	42 0e       	add	r4, r18
 788:	51 1c       	adc	r5, r1
 78a:	f8 01       	movw	r30, r16
 78c:	a0 80       	ld	r10, Z
 78e:	b1 80       	ldd	r11, Z+1	; 0x01
 790:	36 fe       	sbrs	r3, 6
 792:	03 c0       	rjmp	.+6      	; 0x79a <vfprintf+0x174>
 794:	69 2d       	mov	r22, r9
 796:	70 e0       	ldi	r23, 0x00	; 0
 798:	02 c0       	rjmp	.+4      	; 0x79e <vfprintf+0x178>
 79a:	6f ef       	ldi	r22, 0xFF	; 255
 79c:	7f ef       	ldi	r23, 0xFF	; 255
 79e:	c5 01       	movw	r24, r10
 7a0:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <strnlen_P>
 7a4:	4c 01       	movw	r8, r24
 7a6:	f3 2d       	mov	r31, r3
 7a8:	f0 68       	ori	r31, 0x80	; 128
 7aa:	3f 2e       	mov	r3, r31
 7ac:	82 01       	movw	r16, r4
 7ae:	33 fc       	sbrc	r3, 3
 7b0:	1b c0       	rjmp	.+54     	; 0x7e8 <vfprintf+0x1c2>
 7b2:	82 2d       	mov	r24, r2
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	88 16       	cp	r8, r24
 7b8:	99 06       	cpc	r9, r25
 7ba:	b0 f4       	brcc	.+44     	; 0x7e8 <vfprintf+0x1c2>
 7bc:	b6 01       	movw	r22, r12
 7be:	80 e2       	ldi	r24, 0x20	; 32
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	0e 94 0a 05 	call	0xa14	; 0xa14 <fputc>
 7c6:	2a 94       	dec	r2
 7c8:	f4 cf       	rjmp	.-24     	; 0x7b2 <vfprintf+0x18c>
 7ca:	f5 01       	movw	r30, r10
 7cc:	37 fc       	sbrc	r3, 7
 7ce:	85 91       	lpm	r24, Z+
 7d0:	37 fe       	sbrs	r3, 7
 7d2:	81 91       	ld	r24, Z+
 7d4:	5f 01       	movw	r10, r30
 7d6:	b6 01       	movw	r22, r12
 7d8:	90 e0       	ldi	r25, 0x00	; 0
 7da:	0e 94 0a 05 	call	0xa14	; 0xa14 <fputc>
 7de:	21 10       	cpse	r2, r1
 7e0:	2a 94       	dec	r2
 7e2:	21 e0       	ldi	r18, 0x01	; 1
 7e4:	82 1a       	sub	r8, r18
 7e6:	91 08       	sbc	r9, r1
 7e8:	81 14       	cp	r8, r1
 7ea:	91 04       	cpc	r9, r1
 7ec:	71 f7       	brne	.-36     	; 0x7ca <vfprintf+0x1a4>
 7ee:	e8 c0       	rjmp	.+464    	; 0x9c0 <__stack+0xc1>
 7f0:	84 36       	cpi	r24, 0x64	; 100
 7f2:	11 f0       	breq	.+4      	; 0x7f8 <vfprintf+0x1d2>
 7f4:	89 36       	cpi	r24, 0x69	; 105
 7f6:	41 f5       	brne	.+80     	; 0x848 <vfprintf+0x222>
 7f8:	f8 01       	movw	r30, r16
 7fa:	37 fe       	sbrs	r3, 7
 7fc:	07 c0       	rjmp	.+14     	; 0x80c <vfprintf+0x1e6>
 7fe:	60 81       	ld	r22, Z
 800:	71 81       	ldd	r23, Z+1	; 0x01
 802:	82 81       	ldd	r24, Z+2	; 0x02
 804:	93 81       	ldd	r25, Z+3	; 0x03
 806:	0c 5f       	subi	r16, 0xFC	; 252
 808:	1f 4f       	sbci	r17, 0xFF	; 255
 80a:	08 c0       	rjmp	.+16     	; 0x81c <vfprintf+0x1f6>
 80c:	60 81       	ld	r22, Z
 80e:	71 81       	ldd	r23, Z+1	; 0x01
 810:	07 2e       	mov	r0, r23
 812:	00 0c       	add	r0, r0
 814:	88 0b       	sbc	r24, r24
 816:	99 0b       	sbc	r25, r25
 818:	0e 5f       	subi	r16, 0xFE	; 254
 81a:	1f 4f       	sbci	r17, 0xFF	; 255
 81c:	f3 2d       	mov	r31, r3
 81e:	ff 76       	andi	r31, 0x6F	; 111
 820:	3f 2e       	mov	r3, r31
 822:	97 ff       	sbrs	r25, 7
 824:	09 c0       	rjmp	.+18     	; 0x838 <vfprintf+0x212>
 826:	90 95       	com	r25
 828:	80 95       	com	r24
 82a:	70 95       	com	r23
 82c:	61 95       	neg	r22
 82e:	7f 4f       	sbci	r23, 0xFF	; 255
 830:	8f 4f       	sbci	r24, 0xFF	; 255
 832:	9f 4f       	sbci	r25, 0xFF	; 255
 834:	f0 68       	ori	r31, 0x80	; 128
 836:	3f 2e       	mov	r3, r31
 838:	2a e0       	ldi	r18, 0x0A	; 10
 83a:	30 e0       	ldi	r19, 0x00	; 0
 83c:	a3 01       	movw	r20, r6
 83e:	0e 94 46 05 	call	0xa8c	; 0xa8c <__ultoa_invert>
 842:	88 2e       	mov	r8, r24
 844:	86 18       	sub	r8, r6
 846:	45 c0       	rjmp	.+138    	; 0x8d2 <vfprintf+0x2ac>
 848:	85 37       	cpi	r24, 0x75	; 117
 84a:	31 f4       	brne	.+12     	; 0x858 <vfprintf+0x232>
 84c:	23 2d       	mov	r18, r3
 84e:	2f 7e       	andi	r18, 0xEF	; 239
 850:	b2 2e       	mov	r11, r18
 852:	2a e0       	ldi	r18, 0x0A	; 10
 854:	30 e0       	ldi	r19, 0x00	; 0
 856:	25 c0       	rjmp	.+74     	; 0x8a2 <vfprintf+0x27c>
 858:	93 2d       	mov	r25, r3
 85a:	99 7f       	andi	r25, 0xF9	; 249
 85c:	b9 2e       	mov	r11, r25
 85e:	8f 36       	cpi	r24, 0x6F	; 111
 860:	c1 f0       	breq	.+48     	; 0x892 <vfprintf+0x26c>
 862:	18 f4       	brcc	.+6      	; 0x86a <vfprintf+0x244>
 864:	88 35       	cpi	r24, 0x58	; 88
 866:	79 f0       	breq	.+30     	; 0x886 <vfprintf+0x260>
 868:	b5 c0       	rjmp	.+362    	; 0x9d4 <__stack+0xd5>
 86a:	80 37       	cpi	r24, 0x70	; 112
 86c:	19 f0       	breq	.+6      	; 0x874 <vfprintf+0x24e>
 86e:	88 37       	cpi	r24, 0x78	; 120
 870:	21 f0       	breq	.+8      	; 0x87a <vfprintf+0x254>
 872:	b0 c0       	rjmp	.+352    	; 0x9d4 <__stack+0xd5>
 874:	e9 2f       	mov	r30, r25
 876:	e0 61       	ori	r30, 0x10	; 16
 878:	be 2e       	mov	r11, r30
 87a:	b4 fe       	sbrs	r11, 4
 87c:	0d c0       	rjmp	.+26     	; 0x898 <vfprintf+0x272>
 87e:	fb 2d       	mov	r31, r11
 880:	f4 60       	ori	r31, 0x04	; 4
 882:	bf 2e       	mov	r11, r31
 884:	09 c0       	rjmp	.+18     	; 0x898 <vfprintf+0x272>
 886:	34 fe       	sbrs	r3, 4
 888:	0a c0       	rjmp	.+20     	; 0x89e <vfprintf+0x278>
 88a:	29 2f       	mov	r18, r25
 88c:	26 60       	ori	r18, 0x06	; 6
 88e:	b2 2e       	mov	r11, r18
 890:	06 c0       	rjmp	.+12     	; 0x89e <vfprintf+0x278>
 892:	28 e0       	ldi	r18, 0x08	; 8
 894:	30 e0       	ldi	r19, 0x00	; 0
 896:	05 c0       	rjmp	.+10     	; 0x8a2 <vfprintf+0x27c>
 898:	20 e1       	ldi	r18, 0x10	; 16
 89a:	30 e0       	ldi	r19, 0x00	; 0
 89c:	02 c0       	rjmp	.+4      	; 0x8a2 <vfprintf+0x27c>
 89e:	20 e1       	ldi	r18, 0x10	; 16
 8a0:	32 e0       	ldi	r19, 0x02	; 2
 8a2:	f8 01       	movw	r30, r16
 8a4:	b7 fe       	sbrs	r11, 7
 8a6:	07 c0       	rjmp	.+14     	; 0x8b6 <vfprintf+0x290>
 8a8:	60 81       	ld	r22, Z
 8aa:	71 81       	ldd	r23, Z+1	; 0x01
 8ac:	82 81       	ldd	r24, Z+2	; 0x02
 8ae:	93 81       	ldd	r25, Z+3	; 0x03
 8b0:	0c 5f       	subi	r16, 0xFC	; 252
 8b2:	1f 4f       	sbci	r17, 0xFF	; 255
 8b4:	06 c0       	rjmp	.+12     	; 0x8c2 <vfprintf+0x29c>
 8b6:	60 81       	ld	r22, Z
 8b8:	71 81       	ldd	r23, Z+1	; 0x01
 8ba:	80 e0       	ldi	r24, 0x00	; 0
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	0e 5f       	subi	r16, 0xFE	; 254
 8c0:	1f 4f       	sbci	r17, 0xFF	; 255
 8c2:	a3 01       	movw	r20, r6
 8c4:	0e 94 46 05 	call	0xa8c	; 0xa8c <__ultoa_invert>
 8c8:	88 2e       	mov	r8, r24
 8ca:	86 18       	sub	r8, r6
 8cc:	fb 2d       	mov	r31, r11
 8ce:	ff 77       	andi	r31, 0x7F	; 127
 8d0:	3f 2e       	mov	r3, r31
 8d2:	36 fe       	sbrs	r3, 6
 8d4:	0d c0       	rjmp	.+26     	; 0x8f0 <vfprintf+0x2ca>
 8d6:	23 2d       	mov	r18, r3
 8d8:	2e 7f       	andi	r18, 0xFE	; 254
 8da:	a2 2e       	mov	r10, r18
 8dc:	89 14       	cp	r8, r9
 8de:	58 f4       	brcc	.+22     	; 0x8f6 <vfprintf+0x2d0>
 8e0:	34 fe       	sbrs	r3, 4
 8e2:	0b c0       	rjmp	.+22     	; 0x8fa <vfprintf+0x2d4>
 8e4:	32 fc       	sbrc	r3, 2
 8e6:	09 c0       	rjmp	.+18     	; 0x8fa <vfprintf+0x2d4>
 8e8:	83 2d       	mov	r24, r3
 8ea:	8e 7e       	andi	r24, 0xEE	; 238
 8ec:	a8 2e       	mov	r10, r24
 8ee:	05 c0       	rjmp	.+10     	; 0x8fa <vfprintf+0x2d4>
 8f0:	b8 2c       	mov	r11, r8
 8f2:	a3 2c       	mov	r10, r3
 8f4:	03 c0       	rjmp	.+6      	; 0x8fc <vfprintf+0x2d6>
 8f6:	b8 2c       	mov	r11, r8
 8f8:	01 c0       	rjmp	.+2      	; 0x8fc <vfprintf+0x2d6>
 8fa:	b9 2c       	mov	r11, r9
 8fc:	a4 fe       	sbrs	r10, 4
 8fe:	0f c0       	rjmp	.+30     	; 0x91e <__stack+0x1f>
 900:	fe 01       	movw	r30, r28
 902:	e8 0d       	add	r30, r8
 904:	f1 1d       	adc	r31, r1
 906:	80 81       	ld	r24, Z
 908:	80 33       	cpi	r24, 0x30	; 48
 90a:	21 f4       	brne	.+8      	; 0x914 <__stack+0x15>
 90c:	9a 2d       	mov	r25, r10
 90e:	99 7e       	andi	r25, 0xE9	; 233
 910:	a9 2e       	mov	r10, r25
 912:	09 c0       	rjmp	.+18     	; 0x926 <__stack+0x27>
 914:	a2 fe       	sbrs	r10, 2
 916:	06 c0       	rjmp	.+12     	; 0x924 <__stack+0x25>
 918:	b3 94       	inc	r11
 91a:	b3 94       	inc	r11
 91c:	04 c0       	rjmp	.+8      	; 0x926 <__stack+0x27>
 91e:	8a 2d       	mov	r24, r10
 920:	86 78       	andi	r24, 0x86	; 134
 922:	09 f0       	breq	.+2      	; 0x926 <__stack+0x27>
 924:	b3 94       	inc	r11
 926:	a3 fc       	sbrc	r10, 3
 928:	11 c0       	rjmp	.+34     	; 0x94c <__stack+0x4d>
 92a:	a0 fe       	sbrs	r10, 0
 92c:	06 c0       	rjmp	.+12     	; 0x93a <__stack+0x3b>
 92e:	b2 14       	cp	r11, r2
 930:	88 f4       	brcc	.+34     	; 0x954 <__stack+0x55>
 932:	28 0c       	add	r2, r8
 934:	92 2c       	mov	r9, r2
 936:	9b 18       	sub	r9, r11
 938:	0e c0       	rjmp	.+28     	; 0x956 <__stack+0x57>
 93a:	b2 14       	cp	r11, r2
 93c:	60 f4       	brcc	.+24     	; 0x956 <__stack+0x57>
 93e:	b6 01       	movw	r22, r12
 940:	80 e2       	ldi	r24, 0x20	; 32
 942:	90 e0       	ldi	r25, 0x00	; 0
 944:	0e 94 0a 05 	call	0xa14	; 0xa14 <fputc>
 948:	b3 94       	inc	r11
 94a:	f7 cf       	rjmp	.-18     	; 0x93a <__stack+0x3b>
 94c:	b2 14       	cp	r11, r2
 94e:	18 f4       	brcc	.+6      	; 0x956 <__stack+0x57>
 950:	2b 18       	sub	r2, r11
 952:	02 c0       	rjmp	.+4      	; 0x958 <__stack+0x59>
 954:	98 2c       	mov	r9, r8
 956:	21 2c       	mov	r2, r1
 958:	a4 fe       	sbrs	r10, 4
 95a:	10 c0       	rjmp	.+32     	; 0x97c <__stack+0x7d>
 95c:	b6 01       	movw	r22, r12
 95e:	80 e3       	ldi	r24, 0x30	; 48
 960:	90 e0       	ldi	r25, 0x00	; 0
 962:	0e 94 0a 05 	call	0xa14	; 0xa14 <fputc>
 966:	a2 fe       	sbrs	r10, 2
 968:	17 c0       	rjmp	.+46     	; 0x998 <__stack+0x99>
 96a:	a1 fc       	sbrc	r10, 1
 96c:	03 c0       	rjmp	.+6      	; 0x974 <__stack+0x75>
 96e:	88 e7       	ldi	r24, 0x78	; 120
 970:	90 e0       	ldi	r25, 0x00	; 0
 972:	02 c0       	rjmp	.+4      	; 0x978 <__stack+0x79>
 974:	88 e5       	ldi	r24, 0x58	; 88
 976:	90 e0       	ldi	r25, 0x00	; 0
 978:	b6 01       	movw	r22, r12
 97a:	0c c0       	rjmp	.+24     	; 0x994 <__stack+0x95>
 97c:	8a 2d       	mov	r24, r10
 97e:	86 78       	andi	r24, 0x86	; 134
 980:	59 f0       	breq	.+22     	; 0x998 <__stack+0x99>
 982:	a1 fe       	sbrs	r10, 1
 984:	02 c0       	rjmp	.+4      	; 0x98a <__stack+0x8b>
 986:	8b e2       	ldi	r24, 0x2B	; 43
 988:	01 c0       	rjmp	.+2      	; 0x98c <__stack+0x8d>
 98a:	80 e2       	ldi	r24, 0x20	; 32
 98c:	a7 fc       	sbrc	r10, 7
 98e:	8d e2       	ldi	r24, 0x2D	; 45
 990:	b6 01       	movw	r22, r12
 992:	90 e0       	ldi	r25, 0x00	; 0
 994:	0e 94 0a 05 	call	0xa14	; 0xa14 <fputc>
 998:	89 14       	cp	r8, r9
 99a:	38 f4       	brcc	.+14     	; 0x9aa <__stack+0xab>
 99c:	b6 01       	movw	r22, r12
 99e:	80 e3       	ldi	r24, 0x30	; 48
 9a0:	90 e0       	ldi	r25, 0x00	; 0
 9a2:	0e 94 0a 05 	call	0xa14	; 0xa14 <fputc>
 9a6:	9a 94       	dec	r9
 9a8:	f7 cf       	rjmp	.-18     	; 0x998 <__stack+0x99>
 9aa:	8a 94       	dec	r8
 9ac:	f3 01       	movw	r30, r6
 9ae:	e8 0d       	add	r30, r8
 9b0:	f1 1d       	adc	r31, r1
 9b2:	80 81       	ld	r24, Z
 9b4:	b6 01       	movw	r22, r12
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	0e 94 0a 05 	call	0xa14	; 0xa14 <fputc>
 9bc:	81 10       	cpse	r8, r1
 9be:	f5 cf       	rjmp	.-22     	; 0x9aa <__stack+0xab>
 9c0:	22 20       	and	r2, r2
 9c2:	09 f4       	brne	.+2      	; 0x9c6 <__stack+0xc7>
 9c4:	42 ce       	rjmp	.-892    	; 0x64a <vfprintf+0x24>
 9c6:	b6 01       	movw	r22, r12
 9c8:	80 e2       	ldi	r24, 0x20	; 32
 9ca:	90 e0       	ldi	r25, 0x00	; 0
 9cc:	0e 94 0a 05 	call	0xa14	; 0xa14 <fputc>
 9d0:	2a 94       	dec	r2
 9d2:	f6 cf       	rjmp	.-20     	; 0x9c0 <__stack+0xc1>
 9d4:	f6 01       	movw	r30, r12
 9d6:	86 81       	ldd	r24, Z+6	; 0x06
 9d8:	97 81       	ldd	r25, Z+7	; 0x07
 9da:	02 c0       	rjmp	.+4      	; 0x9e0 <__stack+0xe1>
 9dc:	8f ef       	ldi	r24, 0xFF	; 255
 9de:	9f ef       	ldi	r25, 0xFF	; 255
 9e0:	2b 96       	adiw	r28, 0x0b	; 11
 9e2:	e2 e1       	ldi	r30, 0x12	; 18
 9e4:	0c 94 c0 05 	jmp	0xb80	; 0xb80 <__epilogue_restores__>

000009e8 <strnlen_P>:
 9e8:	fc 01       	movw	r30, r24
 9ea:	05 90       	lpm	r0, Z+
 9ec:	61 50       	subi	r22, 0x01	; 1
 9ee:	70 40       	sbci	r23, 0x00	; 0
 9f0:	01 10       	cpse	r0, r1
 9f2:	d8 f7       	brcc	.-10     	; 0x9ea <strnlen_P+0x2>
 9f4:	80 95       	com	r24
 9f6:	90 95       	com	r25
 9f8:	8e 0f       	add	r24, r30
 9fa:	9f 1f       	adc	r25, r31
 9fc:	08 95       	ret

000009fe <strnlen>:
 9fe:	fc 01       	movw	r30, r24
 a00:	61 50       	subi	r22, 0x01	; 1
 a02:	70 40       	sbci	r23, 0x00	; 0
 a04:	01 90       	ld	r0, Z+
 a06:	01 10       	cpse	r0, r1
 a08:	d8 f7       	brcc	.-10     	; 0xa00 <strnlen+0x2>
 a0a:	80 95       	com	r24
 a0c:	90 95       	com	r25
 a0e:	8e 0f       	add	r24, r30
 a10:	9f 1f       	adc	r25, r31
 a12:	08 95       	ret

00000a14 <fputc>:
 a14:	0f 93       	push	r16
 a16:	1f 93       	push	r17
 a18:	cf 93       	push	r28
 a1a:	df 93       	push	r29
 a1c:	fb 01       	movw	r30, r22
 a1e:	23 81       	ldd	r18, Z+3	; 0x03
 a20:	21 fd       	sbrc	r18, 1
 a22:	03 c0       	rjmp	.+6      	; 0xa2a <fputc+0x16>
 a24:	8f ef       	ldi	r24, 0xFF	; 255
 a26:	9f ef       	ldi	r25, 0xFF	; 255
 a28:	2c c0       	rjmp	.+88     	; 0xa82 <fputc+0x6e>
 a2a:	22 ff       	sbrs	r18, 2
 a2c:	16 c0       	rjmp	.+44     	; 0xa5a <fputc+0x46>
 a2e:	46 81       	ldd	r20, Z+6	; 0x06
 a30:	57 81       	ldd	r21, Z+7	; 0x07
 a32:	24 81       	ldd	r18, Z+4	; 0x04
 a34:	35 81       	ldd	r19, Z+5	; 0x05
 a36:	42 17       	cp	r20, r18
 a38:	53 07       	cpc	r21, r19
 a3a:	44 f4       	brge	.+16     	; 0xa4c <fputc+0x38>
 a3c:	a0 81       	ld	r26, Z
 a3e:	b1 81       	ldd	r27, Z+1	; 0x01
 a40:	9d 01       	movw	r18, r26
 a42:	2f 5f       	subi	r18, 0xFF	; 255
 a44:	3f 4f       	sbci	r19, 0xFF	; 255
 a46:	31 83       	std	Z+1, r19	; 0x01
 a48:	20 83       	st	Z, r18
 a4a:	8c 93       	st	X, r24
 a4c:	26 81       	ldd	r18, Z+6	; 0x06
 a4e:	37 81       	ldd	r19, Z+7	; 0x07
 a50:	2f 5f       	subi	r18, 0xFF	; 255
 a52:	3f 4f       	sbci	r19, 0xFF	; 255
 a54:	37 83       	std	Z+7, r19	; 0x07
 a56:	26 83       	std	Z+6, r18	; 0x06
 a58:	14 c0       	rjmp	.+40     	; 0xa82 <fputc+0x6e>
 a5a:	8b 01       	movw	r16, r22
 a5c:	ec 01       	movw	r28, r24
 a5e:	fb 01       	movw	r30, r22
 a60:	00 84       	ldd	r0, Z+8	; 0x08
 a62:	f1 85       	ldd	r31, Z+9	; 0x09
 a64:	e0 2d       	mov	r30, r0
 a66:	09 95       	icall
 a68:	89 2b       	or	r24, r25
 a6a:	e1 f6       	brne	.-72     	; 0xa24 <fputc+0x10>
 a6c:	d8 01       	movw	r26, r16
 a6e:	16 96       	adiw	r26, 0x06	; 6
 a70:	8d 91       	ld	r24, X+
 a72:	9c 91       	ld	r25, X
 a74:	17 97       	sbiw	r26, 0x07	; 7
 a76:	01 96       	adiw	r24, 0x01	; 1
 a78:	17 96       	adiw	r26, 0x07	; 7
 a7a:	9c 93       	st	X, r25
 a7c:	8e 93       	st	-X, r24
 a7e:	16 97       	sbiw	r26, 0x06	; 6
 a80:	ce 01       	movw	r24, r28
 a82:	df 91       	pop	r29
 a84:	cf 91       	pop	r28
 a86:	1f 91       	pop	r17
 a88:	0f 91       	pop	r16
 a8a:	08 95       	ret

00000a8c <__ultoa_invert>:
 a8c:	fa 01       	movw	r30, r20
 a8e:	aa 27       	eor	r26, r26
 a90:	28 30       	cpi	r18, 0x08	; 8
 a92:	51 f1       	breq	.+84     	; 0xae8 <__ultoa_invert+0x5c>
 a94:	20 31       	cpi	r18, 0x10	; 16
 a96:	81 f1       	breq	.+96     	; 0xaf8 <__ultoa_invert+0x6c>
 a98:	e8 94       	clt
 a9a:	6f 93       	push	r22
 a9c:	6e 7f       	andi	r22, 0xFE	; 254
 a9e:	6e 5f       	subi	r22, 0xFE	; 254
 aa0:	7f 4f       	sbci	r23, 0xFF	; 255
 aa2:	8f 4f       	sbci	r24, 0xFF	; 255
 aa4:	9f 4f       	sbci	r25, 0xFF	; 255
 aa6:	af 4f       	sbci	r26, 0xFF	; 255
 aa8:	b1 e0       	ldi	r27, 0x01	; 1
 aaa:	3e d0       	rcall	.+124    	; 0xb28 <__ultoa_invert+0x9c>
 aac:	b4 e0       	ldi	r27, 0x04	; 4
 aae:	3c d0       	rcall	.+120    	; 0xb28 <__ultoa_invert+0x9c>
 ab0:	67 0f       	add	r22, r23
 ab2:	78 1f       	adc	r23, r24
 ab4:	89 1f       	adc	r24, r25
 ab6:	9a 1f       	adc	r25, r26
 ab8:	a1 1d       	adc	r26, r1
 aba:	68 0f       	add	r22, r24
 abc:	79 1f       	adc	r23, r25
 abe:	8a 1f       	adc	r24, r26
 ac0:	91 1d       	adc	r25, r1
 ac2:	a1 1d       	adc	r26, r1
 ac4:	6a 0f       	add	r22, r26
 ac6:	71 1d       	adc	r23, r1
 ac8:	81 1d       	adc	r24, r1
 aca:	91 1d       	adc	r25, r1
 acc:	a1 1d       	adc	r26, r1
 ace:	20 d0       	rcall	.+64     	; 0xb10 <__ultoa_invert+0x84>
 ad0:	09 f4       	brne	.+2      	; 0xad4 <__ultoa_invert+0x48>
 ad2:	68 94       	set
 ad4:	3f 91       	pop	r19
 ad6:	2a e0       	ldi	r18, 0x0A	; 10
 ad8:	26 9f       	mul	r18, r22
 ada:	11 24       	eor	r1, r1
 adc:	30 19       	sub	r19, r0
 ade:	30 5d       	subi	r19, 0xD0	; 208
 ae0:	31 93       	st	Z+, r19
 ae2:	de f6       	brtc	.-74     	; 0xa9a <__ultoa_invert+0xe>
 ae4:	cf 01       	movw	r24, r30
 ae6:	08 95       	ret
 ae8:	46 2f       	mov	r20, r22
 aea:	47 70       	andi	r20, 0x07	; 7
 aec:	40 5d       	subi	r20, 0xD0	; 208
 aee:	41 93       	st	Z+, r20
 af0:	b3 e0       	ldi	r27, 0x03	; 3
 af2:	0f d0       	rcall	.+30     	; 0xb12 <__ultoa_invert+0x86>
 af4:	c9 f7       	brne	.-14     	; 0xae8 <__ultoa_invert+0x5c>
 af6:	f6 cf       	rjmp	.-20     	; 0xae4 <__ultoa_invert+0x58>
 af8:	46 2f       	mov	r20, r22
 afa:	4f 70       	andi	r20, 0x0F	; 15
 afc:	40 5d       	subi	r20, 0xD0	; 208
 afe:	4a 33       	cpi	r20, 0x3A	; 58
 b00:	18 f0       	brcs	.+6      	; 0xb08 <__ultoa_invert+0x7c>
 b02:	49 5d       	subi	r20, 0xD9	; 217
 b04:	31 fd       	sbrc	r19, 1
 b06:	40 52       	subi	r20, 0x20	; 32
 b08:	41 93       	st	Z+, r20
 b0a:	02 d0       	rcall	.+4      	; 0xb10 <__ultoa_invert+0x84>
 b0c:	a9 f7       	brne	.-22     	; 0xaf8 <__ultoa_invert+0x6c>
 b0e:	ea cf       	rjmp	.-44     	; 0xae4 <__ultoa_invert+0x58>
 b10:	b4 e0       	ldi	r27, 0x04	; 4
 b12:	a6 95       	lsr	r26
 b14:	97 95       	ror	r25
 b16:	87 95       	ror	r24
 b18:	77 95       	ror	r23
 b1a:	67 95       	ror	r22
 b1c:	ba 95       	dec	r27
 b1e:	c9 f7       	brne	.-14     	; 0xb12 <__ultoa_invert+0x86>
 b20:	00 97       	sbiw	r24, 0x00	; 0
 b22:	61 05       	cpc	r22, r1
 b24:	71 05       	cpc	r23, r1
 b26:	08 95       	ret
 b28:	9b 01       	movw	r18, r22
 b2a:	ac 01       	movw	r20, r24
 b2c:	0a 2e       	mov	r0, r26
 b2e:	06 94       	lsr	r0
 b30:	57 95       	ror	r21
 b32:	47 95       	ror	r20
 b34:	37 95       	ror	r19
 b36:	27 95       	ror	r18
 b38:	ba 95       	dec	r27
 b3a:	c9 f7       	brne	.-14     	; 0xb2e <__ultoa_invert+0xa2>
 b3c:	62 0f       	add	r22, r18
 b3e:	73 1f       	adc	r23, r19
 b40:	84 1f       	adc	r24, r20
 b42:	95 1f       	adc	r25, r21
 b44:	a0 1d       	adc	r26, r0
 b46:	08 95       	ret

00000b48 <__prologue_saves__>:
 b48:	2f 92       	push	r2
 b4a:	3f 92       	push	r3
 b4c:	4f 92       	push	r4
 b4e:	5f 92       	push	r5
 b50:	6f 92       	push	r6
 b52:	7f 92       	push	r7
 b54:	8f 92       	push	r8
 b56:	9f 92       	push	r9
 b58:	af 92       	push	r10
 b5a:	bf 92       	push	r11
 b5c:	cf 92       	push	r12
 b5e:	df 92       	push	r13
 b60:	ef 92       	push	r14
 b62:	ff 92       	push	r15
 b64:	0f 93       	push	r16
 b66:	1f 93       	push	r17
 b68:	cf 93       	push	r28
 b6a:	df 93       	push	r29
 b6c:	cd b7       	in	r28, 0x3d	; 61
 b6e:	de b7       	in	r29, 0x3e	; 62
 b70:	ca 1b       	sub	r28, r26
 b72:	db 0b       	sbc	r29, r27
 b74:	0f b6       	in	r0, 0x3f	; 63
 b76:	f8 94       	cli
 b78:	de bf       	out	0x3e, r29	; 62
 b7a:	0f be       	out	0x3f, r0	; 63
 b7c:	cd bf       	out	0x3d, r28	; 61
 b7e:	09 94       	ijmp

00000b80 <__epilogue_restores__>:
 b80:	2a 88       	ldd	r2, Y+18	; 0x12
 b82:	39 88       	ldd	r3, Y+17	; 0x11
 b84:	48 88       	ldd	r4, Y+16	; 0x10
 b86:	5f 84       	ldd	r5, Y+15	; 0x0f
 b88:	6e 84       	ldd	r6, Y+14	; 0x0e
 b8a:	7d 84       	ldd	r7, Y+13	; 0x0d
 b8c:	8c 84       	ldd	r8, Y+12	; 0x0c
 b8e:	9b 84       	ldd	r9, Y+11	; 0x0b
 b90:	aa 84       	ldd	r10, Y+10	; 0x0a
 b92:	b9 84       	ldd	r11, Y+9	; 0x09
 b94:	c8 84       	ldd	r12, Y+8	; 0x08
 b96:	df 80       	ldd	r13, Y+7	; 0x07
 b98:	ee 80       	ldd	r14, Y+6	; 0x06
 b9a:	fd 80       	ldd	r15, Y+5	; 0x05
 b9c:	0c 81       	ldd	r16, Y+4	; 0x04
 b9e:	1b 81       	ldd	r17, Y+3	; 0x03
 ba0:	aa 81       	ldd	r26, Y+2	; 0x02
 ba2:	b9 81       	ldd	r27, Y+1	; 0x01
 ba4:	ce 0f       	add	r28, r30
 ba6:	d1 1d       	adc	r29, r1
 ba8:	0f b6       	in	r0, 0x3f	; 63
 baa:	f8 94       	cli
 bac:	de bf       	out	0x3e, r29	; 62
 bae:	0f be       	out	0x3f, r0	; 63
 bb0:	cd bf       	out	0x3d, r28	; 61
 bb2:	ed 01       	movw	r28, r26
 bb4:	08 95       	ret

00000bb6 <_exit>:
 bb6:	f8 94       	cli

00000bb8 <__stop_program>:
 bb8:	ff cf       	rjmp	.-2      	; 0xbb8 <__stop_program>
